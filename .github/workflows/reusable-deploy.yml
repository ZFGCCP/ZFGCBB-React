on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "The environment to deploy to (e.g., main, development)"
      artifact_name:
        required: false
        type: string
        default: ""
        description: "The name of the artifact to deploy (if empty, will use environment-build)"
      preview:
        required: false
        type: boolean
        default: false
        description: "Whether to deploy as a preview"
    secrets:
      LINODE_SSH_KEY:
        required: false
        description: "The SSH key for the Linode server"
      LINODE_SSH_KEY_PUB:
        required: false
        description: "The SSH public key for the Linode server"
      LINODE_HOST:
        required: false
        description: "The hostname of the Linode server"
      LINODE_USER:
        required: false
        description: "The username of the Linode server"
    outputs:
      page_url:
        description: "The URL of the deployed page"
        value: ${{ jobs.deploy.outputs.page_url }}

permissions:
  pages: write
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # For GitHub Pages, we only deploy from the development environment.
      - name: Setup Pages
        if: ${{ inputs.environment == 'development' }}
        uses: actions/configure-pages@v5
        with:
          enablement: true

      - name: Deploy to GitHub Pages
        if: ${{ inputs.environment == 'development' }}
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: ${{ inputs.artifact_name != '' && inputs.artifact_name || format('{0}-build', inputs.environment) }}
          preview: ${{ inputs.environment != 'production' }}

      # For Linode, we only deploy from the main environment.
      - name: Validate secrets
        if: ${{ inputs.environment == 'main' }}
        run: |
          if [ -z "${{ secrets.LINODE_SSH_KEY }}" ]; then
            echo "LINODE_SSH_KEY secret is empty"
            exit 1
          fi
          if [ -z "${{ secrets.LINODE_SSH_KEY_PUB }}" ]; then
            echo "LINODE_SSH_KEY_PUB secret is empty"
            exit 1
          fi
          if [ -z "${{ secrets.LINODE_HOST }}" ]; then
            echo "LINODE_HOST secret is empty"
            exit 1
          fi
          if [ -z "${{ secrets.LINODE_USER }}" ]; then
            echo "LINODE_USER secret is empty"
            exit 1
          fi

      - name: Download artifact
        if: ${{ inputs.environment == 'main' }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name != '' && inputs.artifact_name || format('{0}-build', inputs.environment) }}
          path: build/artifact

      - name: Deploy to Linode Server
        if: ${{ inputs.environment == 'main' }}
        id: deployment_linode
        run: |
          # setup ssh credentials from secrets
          mkdir -p ~/.ssh
          echo "${{ secrets.LINODE_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.LINODE_SSH_KEY_PUB }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa.pub

          # setup ssh config
          cat > ~/.ssh/config <<EOF
          Host ${{ secrets.LINODE_HOST }}
            HostName ${{ secrets.LINODE_HOST }}
            User ${{ secrets.LINODE_USER }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          EOF

          # deploy artifact to linode
          rsync -avz --delete build/artifact/ ${{ secrets.LINODE_USER }}@${{ secrets.LINODE_HOST }}:~/vashhole/
